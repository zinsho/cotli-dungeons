(function(t){function e(e){for(var r,a,u=e[0],i=e[1],p=e[2],l=0,d=[];l<u.length;l++)a=u[l],Object.prototype.hasOwnProperty.call(s,a)&&s[a]&&d.push(s[a][0]),s[a]=0;for(r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r]);c&&c(e);while(d.length)d.shift()();return o.push.apply(o,p||[]),n()}function n(){for(var t,e=0;e<o.length;e++){for(var n=o[e],r=!0,u=1;u<n.length;u++){var i=n[u];0!==s[i]&&(r=!1)}r&&(o.splice(e--,1),t=a(a.s=n[0]))}return t}var r={},s={app:0},o=[];function a(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=t,a.c=r,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)a.d(n,r,function(e){return t[e]}.bind(null,r));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="/";var u=window["webpackJsonp"]=window["webpackJsonp"]||[],i=u.push.bind(u);u.push=e,u=u.slice();for(var p=0;p<u.length;p++)e(u[p]);var c=i;o.push([0,"chunk-vendors"]),n()})({0:function(t,e,n){t.exports=n("56d7")},"034f":function(t,e,n){"use strict";var r=n("85ec"),s=n.n(r);s.a},"20d5":function(t,e,n){},"56d7":function(t,e,n){"use strict";n.r(e);n("e6cf"),n("cca6"),n("a79d");var r=n("2b0e"),s=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"app"}},[n("div",{attrs:{id:"nav"}},[n("router-link",{attrs:{to:"/"}},[t._v("CotLI Dungeons")])],1),n("router-view")],1)},o=[],a=(n("034f"),n("2877")),u={},i=Object(a["a"])(u,s,o,!1,null,null,null),p=i.exports,c=n("8c4f"),l=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"cotli-dungeons"},[n("dungeonInputs"),n("dungeonOutputs")],1)},d=[],f=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"DungeonInputs"},[n("label",{attrs:{for:"dpsCap"}},[t._v("DPS Cap Exponent (max DPS): ")]),n("input",{directives:[{name:"model",rawName:"v-model.number",value:t.dpsCap,expression:"dpsCap",modifiers:{number:!0}}],attrs:{type:"number",id:"dpsCap"},domProps:{value:t.dpsCap},on:{input:function(e){e.target.composing||(t.dpsCap=t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),n("br"),n("label",{attrs:{for:"totalIdols"}},[t._v("Total Idols ("+t._s(t._f("asSci")(t.totalIdols))+"): ")]),n("input",{directives:[{name:"model",rawName:"v-model.number",value:t.totalIdols,expression:"totalIdols",modifiers:{number:!0}}],attrs:{type:"number"},domProps:{value:t.totalIdols},on:{input:function(e){e.target.composing||(t.totalIdols=t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),t._v(" "),n("br"),n("label",{attrs:{for:"sprintCap"}},[t._v("Sprint Cap: ")]),n("input",{directives:[{name:"model",rawName:"v-model.number",value:t.sprintCap,expression:"sprintCap",modifiers:{number:!0}}],attrs:{id:"sprintCap",type:"number",min:"0",max:"3500",step:"25"},domProps:{value:t.sprintCap},on:{input:function(e){e.target.composing||(t.sprintCap=t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),n("br"),n("label",{attrs:{for:"t2s"}},[t._v("T2 11ths completed: ")]),n("input",{directives:[{name:"model",rawName:"v-model.number",value:t.t2s,expression:"t2s",modifiers:{number:!0}}],attrs:{id:"t2s",type:"number",min:"0",max:"9"},domProps:{value:t.t2s},on:{input:function(e){e.target.composing||(t.t2s=t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),n("br")])},v=[],h={name:"DungeonInputs",computed:{dpsCap:{get:function(){return this.$store.getters.getCurrent("dpsCap")},set:function(t){this.$store.commit("updateCurrent",{key:"dpsCap",value:t})}},totalIdols:{get:function(){return this.$store.getters.getCurrent("TotalIdols")},set:function(t){this.$store.commit("updateCurrent",{key:"TotalIdols",value:t})}},sprintCap:{get:function(){return this.$store.getters.getCurrent("SprintCap")},set:function(t){this.$store.commit("updateCurrent",{key:"SprintCap",value:t})}},t2s:{get:function(){return this.$store.getters.getCurrent("t2s")},set:function(t){this.$store.commit("updateCurrent",{key:"t2s",value:t})}}}},g=h,m=(n("a938"),Object(a["a"])(g,f,v,!1,null,"2051f510",null)),I=m.exports,b=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"DungeonOutputs"},[n("h3",[t._v("General")]),n("p",[t._v("Level Cap: "+t._s(t.levelCap))]),n("p",[t._v("Sprint FP Bonus increase: "+t._s(t._f("asPct")(t.sprintIncrease)))]),n("h3",[t._v("Free Play Gains")]),n("p",[t._v("Average BI Gains + Post-Ad Bonus: "+t._s(t._f("asSci")(t.avgBI)))]),n("p",[t._v("BI Gains from FP Increase from Sprint: "+t._s(t._f("asSci")(t.sprintBIIncrease)))]),n("h3",[t._v("Dungeon Gains")]),n("p",[t._v("Sprint Dungeon Idol %: "+t._s(t._f("asPct")(t.sprintDungeonPct)))]),n("p",[t._v("Sprint Dungeon Idol Gain: "+t._s(t._f("asSci")(t.sprintDungeonIdolGain)))]),n("p",[t._v("Deep Dungeon Cap: "+t._s(t.deepDungeonCap))]),n("p",[t._v("Deep Dungeon Idol %: "+t._s(t._f("asPct")(t.deepDungeonPct)))]),n("p",[t._v("Deep Dungeon Idol Gain: "+t._s(t._f("asSci")(t.deepDungeonIdolGain)))]),n("h3",[t._v("Comparison")]),n("label",{attrs:{for:"detailed"}},[t._v("Show all comparisons")]),n("input",{directives:[{name:"model",rawName:"v-model",value:t.showDetailed,expression:"showDetailed"}],attrs:{type:"checkbox",id:"detailed"},domProps:{checked:Array.isArray(t.showDetailed)?t._i(t.showDetailed,null)>-1:t.showDetailed},on:{change:function(e){var n=t.showDetailed,r=e.target,s=!!r.checked;if(Array.isArray(n)){var o=null,a=t._i(n,o);r.checked?a<0&&(t.showDetailed=n.concat([o])):a>-1&&(t.showDetailed=n.slice(0,a).concat(n.slice(a+1)))}else t.showDetailed=s}}}),t.showDetailed||t.sprintDungeonIdolGain<t.sprintBIIncrease?n("p",[t._v("Total Idols for dungeon to match FP Bonus: "+t._s(t._f("asSci")(t.matchFP)))]):t._e(),n("p",[t._v("Average BI to match Dungeon Sprint: "+t._s(t._f("asSci")(t.matchDungeon)))]),n("p",[t._v("DPS Cap to match Dungeon Sprint: "+t._s(t.newDPSCap))])])},_=[],C=n("5530"),D=n("2f62"),B={name:"DungeonOutputs",methods:{biLevel(t){return this.$store.getters.BIbyLevel(t)}},data:function(){return{showDetailed:!0}},computed:Object(C["a"])(Object(C["a"])(Object(C["a"])({},Object(D["b"])({current:t=>t.current})),Object(D["b"])({constants:t=>t.constants})),{},{capGrowth:function(){return this.constants.fpMax/this.constants.dpsCap},levelCap:function(){return Math.min(this.constants.fpMax,Math.floor(this.current.dpsCap*this.capGrowth))},sprintIncrease:function(){return this.current.SprintCap/this.constants.fpSprintLevels*this.constants.fpStarBonus},avgBI:function(){return 0===this.current.t2s?"Bonus Idols not unlocked":this.$store.getters.BIatLevelCap(this.levelCap).TotalBIAvg*this.constants.postAdBonus*(1+.2*(this.current.t2s-1))},sprintBIIncrease:function(){return 0===this.current.t2s?"Bonus Idols not unlocked":this.avgBI*this.sprintIncrease},sprintDungeonPct:function(){return this.$store.getters.dungeonPct(this.current.SprintCap)},sprintDungeonIdolGain:function(){return this.current.TotalIdols*this.sprintDungeonPct},deepDungeonCap:function(){return Math.floor(this.current.dpsCap*this.capGrowth)},deepDungeonPct:function(){return this.$store.getters.dungeonPct(this.levelCap)},deepDungeonIdolGain:function(){return this.current.TotalIdols*this.deepDungeonPct},matchFP:function(){return 0===this.current.t2s?"Bonus Idols not unlocked":this.sprintBIIncrease/this.sprintDungeonPct},matchDungeon:function(){return 0===this.current.t2s?"Bonus Idols not unlocked":this.sprintDungeonIdolGain/this.constants.postAdBonus/this.sprintIncrease},newDPSCap:function(){if(0===this.current.t2s)return"Bonus Idols not unlocked";if(this.current.dpsCap>this.constants.dpsCap)return"Impossible";{let t=this.$store.getters.BIatAvgDrop(this.matchDungeon).DPSCap;return t-t%10+10}}})},P=B,S=(n("60f9"),Object(a["a"])(P,b,_,!1,null,"a6d4df76",null)),w=S.exports,y={name:"cotli-dungeons",components:{dungeonInputs:I,dungeonOutputs:w}},x=y,O=Object(a["a"])(x,l,d,!1,null,null,null),T=O.exports;r["a"].use(c["a"]);const $=[{path:"/",name:"Dungeon Calculator",component:T}],j=new c["a"]({mode:"history",base:"/",routes:$});var k=j,G=n("0e44");r["a"].use(D["a"]);var M=new D["a"].Store({plugins:[Object(G["a"])({paths:["current","BITable"]})],state:{constants:{dpsCap:1100,fpMax:5685,fpStarBonus:.02,postAdBonus:1.25,fpSprintLevels:250,dungeonSprintLevels:500,dungeonPct:.0015,switchToSci:Math.pow(10,6)},BITable:[],current:{dpsCap:308,TotalIdols:0,SprintCap:0,t2s:9}},getters:{BIbyLevel:t=>e=>t.BITable.find(t=>t.Level==e),BIatLevelCap:t=>e=>t.BITable.filter(t=>t.Level<=e).pop(),BIatAvgDrop:t=>e=>{let n=e*(1+.25*(t.current.t2s-1));return t.BITable.find(t=>t.TotalBIAvg>n)},getCurrent:t=>e=>t.current[e],dungeonPct:t=>e=>Math.floor(e/t.constants.dungeonSprintLevels)*t.constants.dungeonPct},mutations:{setupBITable(t){let e=[],n=0;for(var r=100;r<=t.constants.fpMax;r+=5){let s=r-95,o=r/(t.constants.fpMax/t.constants.dpsCap),a=10*Math.pow(1.01,.4*s),u=n+a;n=u,e.push({Level:r,DPSCap:o,BIGain:a,TotalBIMax:u,TotalBIAvg:.4*u})}t.BITable=e},updateCurrent(t,e){t.current[e.key]=e.value}},actions:{},modules:{}});r["a"].config.productionTip=!1,r["a"].filter("asSci",(function(t){return t?t>=1e6?t.toExponential(2):t:""})),r["a"].filter("asPct",(function(t){return t?Math.floor(1e4*t)/100+"%":""})),new r["a"]({router:k,store:M,render:t=>t(p),created:function(){M.commit("setupBITable")}}).$mount("#app")},"60f9":function(t,e,n){"use strict";var r=n("fb3c"),s=n.n(r);s.a},"85ec":function(t,e,n){},a938:function(t,e,n){"use strict";var r=n("20d5"),s=n.n(r);s.a},fb3c:function(t,e,n){}});
//# sourceMappingURL=app.8e52883a.js.map